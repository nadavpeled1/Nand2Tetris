// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    /*we will need:
    //8 registers
    Mux8way to read from one of them
    Mux to load(read/write)
    DMux8 to choose who to write on ("adress")
    */
    /**
    * Memory of 8 registers, each 16-bit wide.  
    * The chip facilitates read and write operations, as follows:
    *     Read:  out(t) = RAM8[address(t)](t)
    *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
    * In words: the chip always outputs the value stored at the memory 
    * location specified by address. If load == 1, the in value is loaded 
    * into the memory location specified by address.  This value becomes 
    * available through the out output starting from the next time step.
    */ 
    //we stream the input to the given adress with the select
    DMux8Way(in=load,sel=address,a=load0,b=load1,c=load2,d=load3,e=load4,f=load5,g=load6,h=load7);
    Register(in=in,load=load0,out=out0);
    Register(in=in,load=load1,out=out1);
    Register(in=in,load=load2,out=out2);
    Register(in=in,load=load3,out=out3);
    Register(in=in,load=load4,out=out4);
    Register(in=in,load=load5,out=out5);
    Register(in=in,load=load6,out=out6);
    Register(in=in,load=load7,out=out7);
    Mux8Way16(a=out0,b=out1,c=out2,d=out3,e=out4,f=out5,g=out6,h=out7,sel=address,out=out);
}
