// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl
/** 
 * The Memory chip implements the complete address space of the Hack data memory,
 * including RAM, memory mapped screen, and memory mapped keyboard.
 * Outputs the value of the memory location specified by the address input.
 * If (load == 1), sets the memory location specified by the address input
 * to the value of the in input.
 * Address space rules:
 * Only the upper 16K + 8K + 1 words of the memory are used.
 * Access to address 0 to 16383 (0x0000 to 0x3FFF) results in accessing the RAM;
 * Access to address 16384 to 24575 (0x4000 to 0x5FFF) results in accessing the Screen memory map;
 * Access to address 24576 (0x6000) results in accessing the Keyboard memory map.
 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: If load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output in the next time step.
 */ 
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    //check the 2MSB of address to see which component is accessed
    //remember that after accessing the relevant one, we check load to see if we load to update
    //or keeping the current one
    
    DMux4Way(in=load, sel=address[13..14], a=loadram16k, b=loadram16k, c=loadkeyboard, d=nothing);

    //each one of the components gets the appropriate bits of address:
    RAM16K(in=in ,load=loadram16k ,address=address[0..13] ,out=outram16k1 ) ;
    Screen(in=in ,load=loadscreen ,address=address[0..12] ,out=outscreen );
    Keyboard(out=outkeyboard);

    //finally, we choose out of the 3 options by the 2 msb of address
    Mux4Way16(a=outram16k ,b=outram16k ,c=outscreen ,d=outkeyboard ,sel=address[13..14] ,out=out );
}
